@using System.IO
@inject HttpClient Http





<div class="input-group">
    <div class="custom-file">
        <InputFile class="custom-file-input" multiple OnChange="OnChange" accept="image/jpeg, image/png, image/gif, video/*" id="inputFile" />
        <label class="custom-file-label" for="inputFile">Choose file</label>
    </div>
</div>

<div style="display: grid; grid-template-columns: repeat(3, 1fr); gap: 10px;">
    @foreach (var item in filesBase64)
    {
        <div style="width: 150px; height: 150px; overflow: hidden;">
            @if (item.ContentType.StartsWith("image"))
            {
                <img src="data:@item.ContentType;base64,@item.Base64data" style="max-width: 100%; max-height: 100%;" />
            }
            else if (item.ContentType.StartsWith("video"))
            {
                <video controls style="max-width: 100%; max-height: 100%;">
                    <source src="data:@item.ContentType;base64,@item.Base64data" type="@item.ContentType" />
                    Your browser does not support the video tag.
                </video>
            }
        </div>
    }
</div>
<h6>@message</h6>

<div class="input-group-append">
    <button class="btn btn-success" @onclick="Upload" disabled="@isDisable">Upload</button>
</div>

@code {
    List<Attachments> filesBase64 = new List<Attachments>();
    string message = "InputFile Example";
    bool isDisable = false;

    async Task OnChange(InputFileChangeEventArgs e)
    {
        var files = e.GetMultipleFiles();

        foreach (var file in files)
        {
            var buf = new byte[file.Size];

            using (var stream = file.OpenReadStream())
            {
                await stream.ReadAsync(buf);
            }

            filesBase64.Add(new Attachments { Base64data = Convert.ToBase64String(buf), ContentType = file.ContentType, FileName = file.Name });
        }

        message = "Click UPLOAD to continue";
    }

    async Task Upload()
    {
        isDisable = true;

        using (var msg = await Http.PostAsJsonAsync<List<Attachments>>("https://localhost:7046/api/att", filesBase64, System.Threading.CancellationToken.None))
        {
            isDisable = false;

            if (msg.IsSuccessStatusCode)
            {
                message = $"{filesBase64.Count} files uploaded";

                filesBase64.Clear();
            }
        }
    }
}
